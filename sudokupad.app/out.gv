digraph G {
concentrate=true;
splines="ortho";
rankdir="LR";
subgraph legend{
    rank = min;
    label = "legend";
    Legend [shape=none, margin=0, label = <
        <table cellspacing="0" cellpadding="0" border="1"><tr><td>Code2flow Legend</td></tr><tr><td>
        <table cellspacing="0">
        <tr><td>Regular function</td><td width="50px" bgcolor='#cccccc'></td></tr>
        <tr><td>Trunk function (nothing calls this)</td><td bgcolor='#966F33'></td></tr>
        <tr><td>Leaf function (this calls nothing else)</td><td bgcolor='#6db33f'></td></tr>
        <tr><td>Function call</td><td><font color='black'>&#8594;</font></td></tr>
        </table></td></tr></table>
        >];
}node_6d3e6261 [label="0: (global)()" name="script::(global)" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_dffdb732 [label="3371: App()" name="script::App" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_5af098f8 [label="764: Cell()" name="script::Cell" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_b84ef60e [label="1291: Grid()" name="script::Grid" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_3d908a45 [label="1936: Puzzle()" name="script::Puzzle" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_c39615aa [label="114: SvgRenderer()" name="script::SvgRenderer" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_4b47e5bb [label="1557: Timer()" name="script::Timer" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_c74c25cf [label="5452: createPuzzleWithSolution()" name="script::createPuzzleWithSolution" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_6a87ed45 [label="5301: getPuzzleId()" name="script::getPuzzleId" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_088bfd03 [label="5492: handleDOMContentLoaded()" name="script::handleDOMContentLoaded" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_0726cb4b [label="5488: handleNewLinkWithSolution()" name="script::handleNewLinkWithSolution" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_bd737038 [label="5557: load()" name="script::load" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_4f82bf5f [label="5476: openPuzzleWithSolution()" name="script::openPuzzleWithSolution" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_70b54142 [label="5271: showErrorPage()" name="script::showErrorPage" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_76461a13 [label="5377: testSolver()" name="script::testSolver" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_67e016d9 [label="2: createSolver()" name="solver::createSolver" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_6d3e6261 -> node_5af098f8 [color="#E69F00" penwidth="2"];
node_6d3e6261 -> node_c39615aa [color="#E69F00" penwidth="2"];
node_6d3e6261 -> node_6a87ed45 [color="#E69F00" penwidth="2"];
node_dffdb732 -> node_b84ef60e [color="#56B4E9" penwidth="2"];
node_dffdb732 -> node_3d908a45 [color="#56B4E9" penwidth="2"];
node_dffdb732 -> node_c39615aa [color="#56B4E9" penwidth="2"];
node_dffdb732 -> node_4b47e5bb [color="#56B4E9" penwidth="2"];
node_c74c25cf -> node_6a87ed45 [color="#CC79A7" penwidth="2"];
node_088bfd03 -> node_dffdb732 [color="#009E73" penwidth="2"];
node_088bfd03 -> node_6a87ed45 [color="#009E73" penwidth="2"];
node_088bfd03 -> node_70b54142 [color="#009E73" penwidth="2"];
node_0726cb4b -> node_4f82bf5f [color="#009E73" penwidth="2"];
node_bd737038 -> node_c39615aa [color="#000000" penwidth="2"];
node_4f82bf5f -> node_c74c25cf [color="#CC79A7" penwidth="2"];
node_76461a13 -> node_67e016d9 [color="#009E73" penwidth="2"];
subgraph cluster_1b90acb7 {
    node_c39615aa node_5af098f8 node_b84ef60e node_4b47e5bb node_3d908a45 node_dffdb732 node_70b54142 node_6a87ed45 node_76461a13 node_c74c25cf node_4f82bf5f node_0726cb4b node_088bfd03 node_bd737038 node_6d3e6261;
    label="File: script";
    name="script";
    style="filled";
    graph[style=dotted];
};
subgraph cluster_1cc8ae64 {
    node_67e016d9;
    label="File: solver";
    name="solver";
    style="filled";
    graph[style=dotted];
};
}
